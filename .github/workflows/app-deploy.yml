name: 'App CI/CD'

on:
 push:
   branches: [ "main" ]
   paths:
     - 'app/**'

env:
 AWS_REGION: us-east-1
 TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}

jobs:
 build-and-test:
   runs-on: ubuntu-latest
   defaults:
     run:
       working-directory: ./app
   
   steps:
   - uses: actions/checkout@v3
   
   - name: Setup Node.js
     uses: actions/setup-node@v3
     with:
       node-version: '18'
       
   - name: Install Dependencies
     run: npm ci
     
   - name: Run Tests
     run: npm test
     
   - name: Build
     run: npm run build
     
   - name: Upload Build
     uses: actions/upload-artifact@v3
     with:
       name: app-build
       path: app/dist/

 deploy:
   needs: build-and-test
   runs-on: ubuntu-latest
   if: github.ref == 'refs/heads/main'
   
   steps:
   - uses: actions/download-artifact@v3
     with:
       name: app-build
       
   - name: Configure AWS
     uses: aws-actions/configure-aws-credentials@v1
     with:
       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       aws-region: ${{ env.AWS_REGION }}
       
   - name: Deploy to S3
     run: |
       aws s3 cp . s3://${{ secrets.S3_BUCKET }}/app/ --recursive
       aws autoscaling start-instance-refresh \
         --auto-scaling-group-name $(aws autoscaling describe-auto-scaling-groups \
         --query 'AutoScalingGroups[0].AutoScalingGroupName' \
         --output text)